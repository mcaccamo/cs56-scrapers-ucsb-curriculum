<?xml version="1.0" encoding="utf-8"?>
<project default="compile">
	<!-- build.xml for cs56-scrapers-ucsb-curriculum
	 Authors:
	 Kevin Zaragoza, CS56, W16
	 Natasha Lee, CS56, W16
	 Kevin Mai, CS56, W14
	 James Neally, CS56, W12
	 Mark Nguyen, CS56, S13
	 Daniel Vicory, CS56, S13
	 P. Conrad, CS56, S13 -->
	
	<property environment="env" /> <!-- load the environment variables -->
	<property name="webRoot" value="${env.HOME}/public_html/" />
	<property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/" />
	
	<property name="course" value="cs56" />
	<property name="quarter" value="W14" />
	<property name="issueNum" value="0000660" />
	<property name="mainClass" value="edu.ucsb.cs56.projects.scrapers.ucsb_curriculum.UCSBCurriculumSearch" />
	<property name="installCert" value="edu.ucsb.cs56.projects.scrapers.ucsb_curriculum.InstallCert"/>
	<property name="GUI" value="edu.ucsb.cs56.projects.scrapers.ucsb_curriculum.UCSBgui" />
	
	<property name="projectName" value="${course}_${quarter}_${issueNum}" />
	<property name="projectPath" value="edu/ucsb/cs56/projects/scrapers/ucsb-curriculum" />
	<property name="javadocDest" value="${webRoot}/cs56/cs56-scrapers-ucsb-curriculum/javadoc" />
	<property name="javadocURL" value="${webBaseUrl}cs56/cs56-scrapers-ucsb-curriculum/javadoc" />
	
	
	
	<path id="project.class.path">
		<pathelement location="build" />
		<pathelement location="lib/junit-4.8.2.jar" />
	</path>
	
	<target name="-check-ssl-file" unless="file.exists">
		<available property="file.exists" file="jssecacerts" />
	</target>
	
	<target name="setup"
		depends="compile,-check-ssl-file"
		description="downloads ssl certificate for curriculum search page"
		unless="${file.exists}">
		<java classname="${installCert}" inputstring="1">
			<arg value="my.sa.ucsb.edu:443" />
			<classpath refid="project.class.path" />
		</java>
	</target>
	
	<target name="compile" description="compile the code">
		<mkdir dir="build" />
		<javac fork="true" srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false">
			<classpath refid="project.class.path" />
		</javac>
	</target>

 <target name="saveLect" depends = "compile,setup" description="test save lect">
	 <java fork="true" classpathref="project.class.path" classname="edu.ucsb.cs56.projects.scrapers.ucsb_curriculum.saveLect" />
 </target>
	
 <target name="gui" depends = "compile,setup" description="run the gui">
	 <java fork="true" classpathref="project.class.path" classname="${GUI}" />
 </target>
 
 <target name="run" depends="compile,setup" description="run the main">
	 <java classname="${mainClass}">
		 <classpath refid="project.class.path" />
	 </java>
 </target>
 
 <target name="clean" description="get rid of unnecessary files">
	 <delete failonerror="false" verbose="true">
		 <fileset dir="build" includes="**/*.class" />
	 </delete>
	 <delete dir="javadoc" quiet="true" />
	 <delete dir="dist" quiet="true" />
	 <delete dir="download" quiet="true" />
	 <delete dir="temp" quiet="true" />
 </target>
 
 <target name="test" depends="compile,setup" description="run junit tests">
	 <junit haltonerror="no" haltonfailure="no">
		 <classpath refid="project.class.path" />
		 
		 <batchtest fork="yes">
			 <fileset dir="src">
				 <!-- this will pick up every class with a name ending in Test -->
				 <include name="**/*Test.java" />
			 </fileset>
		 </batchtest>
		 
		 <formatter type="plain" usefile="false" />
		 
	 </junit>
 </target>
 
 <target name="javadoc" depends="compile">
	 <delete dir="javadoc" quiet="true" />
	 <javadoc  destdir="javadoc" author="true" version="true" use="true">
		 <fileset dir="src" includes="**/*.java" />
		 <classpath refid="project.class.path" />
		 
	 </javadoc>
	 
	 <!-- delete the old javadoc -->
	 <delete quiet="true" dir="${javadocDest}" />
	 
	 <!-- copy everything you just made to the javadoc destination, and then make it readable -->
	 
	 <copy todir="${javadocDest}">
		 <fileset dir="javadoc" />
	 </copy>
	 
	 <!-- Note: this only does the chmod command on the
	  javadoc subdirectory and its contents.  You MIGHT have to
	  MANUALLY do the chmod on the parent directories.  However,
	  you should only need to do that once. -->
	 
	 <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />
	 <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />
	 <echo>Javadoc deployed to ${javadocURL}</echo>
 </target>
 
 
 
</project>
